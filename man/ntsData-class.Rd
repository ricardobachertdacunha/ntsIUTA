% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/S4_classes.R, R/S4_methods_001_ntsdata.R,
%   R/S4_methods_002_parameters.R
\docType{class}
\name{ntsData-class}
\alias{ntsData-class}
\alias{projectInfo,ntsData-method}
\alias{path,ntsData-method}
\alias{samplesTable,ntsData-method}
\alias{filePaths,ntsData-method}
\alias{samples,ntsData-method}
\alias{replicates,ntsData-method}
\alias{replicates<-,ntsData-method}
\alias{blanks,ntsData-method}
\alias{blanks<-,ntsData-method}
\alias{acquisitionMethods,ntsData-method}
\alias{acquisitionMethods<-,ntsData-method}
\alias{polarity,ntsData-method}
\alias{polarity<-,ntsData-method}
\alias{metadata,ntsData-method}
\alias{controlSamples,ntsData-method}
\alias{controlSamples<-,ntsData-method}
\alias{[,ntsData,ANY,missing,missing-method}
\alias{hasAdjustedRetentionTime,ntsData-method}
\alias{EICs,ntsData-method}
\alias{plotEICs,ntsData-method}
\alias{plotEICs,data.table-method}
\alias{TICs,ntsData-method}
\alias{plotTICs,ntsData-method}
\alias{plotTICs,data.table-method}
\alias{XICs,ntsData-method}
\alias{plotXICs,ntsData-method}
\alias{plotXICs,data.table-method}
\alias{MS2s,ntsData-method}
\alias{plotMS2s,ntsData-method}
\alias{plotMS2s,data.table-method}
\alias{peaks,ntsData-method}
\alias{plotPeaks,ntsData-method}
\alias{mapPeaks,ntsData-method}
\alias{[,ntsData,ANY,ANY,missing-method}
\alias{features,ntsData-method}
\alias{plotFeatures,ntsData-method}
\alias{components,ntsData-method}
\alias{plotComponents,ntsData-method}
\alias{filter,ntsData-method}
\alias{pickingParameters,ntsData,missing,missing-method}
\alias{pickingParameters,ntsData,character,ANY-method}
\alias{groupingParameters,ntsData,missing,missing-method}
\alias{groupingParameters,ntsData,character,ANY-method}
\alias{fillingParameters,ntsData,missing,missing-method}
\alias{fillingParameters,ntsData,character,ANY-method}
\alias{fragmentsParameters,ntsData,missing,missing-method}
\alias{fragmentsParameters,ntsData,character,ANY-method}
\alias{annotationParameters,ntsData,missing,missing-method}
\alias{annotationParameters,ntsData,character,ANY-method}
\alias{saveParameters,ntsData-method}
\alias{loadParameters,ntsData-method}
\title{ntsData}
\usage{
\S4method{projectInfo}{ntsData}(object, title = NULL, description = NULL, date = NULL)

\S4method{path}{ntsData}(object)

\S4method{samplesTable}{ntsData}(object)

\S4method{filePaths}{ntsData}(object)

\S4method{samples}{ntsData}(object)

\S4method{replicates}{ntsData}(object)

\S4method{replicates}{ntsData}(object) <- value

\S4method{blanks}{ntsData}(object)

\S4method{blanks}{ntsData}(object) <- value

\S4method{acquisitionMethods}{ntsData}(object)

\S4method{acquisitionMethods}{ntsData}(object) <- value

\S4method{polarity}{ntsData}(object)

\S4method{polarity}{ntsData}(object) <- value

\S4method{metadata}{ntsData}(x, varname)

\S4method{controlSamples}{ntsData}(object)

\S4method{controlSamples}{ntsData}(object, remove = FALSE, nameType = "replicates") <- value

\S4method{[}{ntsData,ANY,missing,missing}(x, i, j, ..., drop = TRUE)

\S4method{hasAdjustedRetentionTime}{ntsData}(object)

\S4method{EICs}{ntsData}(object, samples = NULL, mz = NULL, ppm = 20, rt = NULL, sec = 60)

\S4method{plotEICs}{ntsData}(
  object,
  samples = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{plotEICs}{data.table}(
  object,
  samples = NULL,
  colorBy = "targets",
  legendNames = NULL,
  targets = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{TICs}{ntsData}(object, samples = NULL)

\S4method{plotTICs}{ntsData}(
  object,
  samples = NULL,
  colorBy = "samples",
  title = NULL,
  interactive = FALSE
)

\S4method{plotTICs}{data.table}(
  object,
  samples = NULL,
  colorBy = "samples",
  title = NULL,
  interactive = FALSE
)

\S4method{XICs}{ntsData}(object, samples = NULL, mz = NULL, ppm = 20, rt = NULL, sec = 60)

\S4method{plotXICs}{ntsData}(
  object,
  samples = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  legendNames = NULL,
  plotTargetMark = TRUE,
  targetsMark = NULL,
  ppmMark = 5,
  secMark = 10,
  numberRows = 1
)

\S4method{plotXICs}{data.table}(
  object,
  samples = NULL,
  targets = NULL,
  legendNames = NULL,
  plotTargetMark = TRUE,
  targetsMark = NULL,
  ppmMark = 5,
  secMark = 10,
  numberRows = 1
)

\S4method{MS2s}{ntsData}(
  object = NULL,
  samples = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  algorithm = NA_character_,
  settings = NULL
)

\S4method{plotMS2s}{ntsData}(
  object = NULL,
  samples = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  algorithm = NA_character_,
  settings = NULL,
  legendNames = NULL,
  title = NULL,
  colorBy = NULL,
  interactive = FALSE
)

\S4method{plotMS2s}{data.table}(
  object = NULL,
  samples = NULL,
  replicates = NULL,
  targets = NULL,
  legendNames = NULL,
  title = NULL,
  colorBy = "targets",
  interactive = FALSE
)

\S4method{peaks}{ntsData}(
  object,
  samples = NULL,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60
)

\S4method{plotPeaks}{ntsData}(
  object,
  samples = NULL,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{mapPeaks}{ntsData}(
  object,
  samples = NULL,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  colorBy = "targets",
  legendNames = NULL,
  xlim = 30,
  ylim = 0.05,
  title = NULL
)

\S4method{[}{ntsData,ANY,ANY,missing}(x, i, j, ..., drop = TRUE)

\S4method{features}{ntsData}(
  object,
  samples = NULL,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60
)

\S4method{plotFeatures}{ntsData}(
  object,
  samples = NULL,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  colorBy = "targets",
  legendNames = NULL,
  title = NULL,
  interactive = FALSE
)

\S4method{components}{ntsData}(
  object,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 60,
  all = FALSE
)

\S4method{plotComponents}{ntsData}(
  object,
  targets = NULL,
  mz = NULL,
  ppm = 20,
  rt = NULL,
  sec = 30,
  all = FALSE,
  colorBy = "isotopes",
  spectra = FALSE
)

\S4method{filter}{ntsData}(obj, ...)

\S4method{pickingParameters}{ntsData,missing,missing}(object)

\S4method{pickingParameters}{ntsData,character,ANY}(object, algorithm, settings)

\S4method{groupingParameters}{ntsData,missing,missing}(object)

\S4method{groupingParameters}{ntsData,character,ANY}(object, algorithm, settings)

\S4method{fillingParameters}{ntsData,missing,missing}(object)

\S4method{fillingParameters}{ntsData,character,ANY}(object, algorithm, settings)

\S4method{fragmentsParameters}{ntsData,missing,missing}(object)

\S4method{fragmentsParameters}{ntsData,character,ANY}(object, algorithm, settings)

\S4method{annotationParameters}{ntsData,missing,missing}(object)

\S4method{annotationParameters}{ntsData,character,ANY}(object, algorithm, settings)

\S4method{saveParameters}{ntsData}(object, path = NULL, filename = NULL)

\S4method{loadParameters}{ntsData}(object, filepath = NULL)
}
\arguments{
\item{object}{An \linkS4class{ntsData} object.}

\item{title}{A character string to be used as title.}

\item{description}{A character string with a description for the project.}

\item{date}{\link{Date} object.}

\item{value}{A character vector applicable to the respective method.}

\item{x}{An \linkS4class{ntsData} object.}

\item{varname}{A character vector applicable to the respective method.}

\item{remove}{A logical value applicable to the respective method.}

\item{nameType}{A character string of length one applicable to the respective method.}

\item{i}{The indice/s or name/s of the samples to keep in the \code{x} object.}

\item{j}{The indice/s, \emph{id}/s or \emph{ufi} for subsettting on features.}

\item{...}{List of arguments for the respective method.}

\item{samples}{A numeric or character vector with the indice/s or name/s
of samples from the \code{object}.}

\item{mz}{A numeric vector or data.table/data.frame to make targets.
See ?\link{makeTargets} for more information.}

\item{ppm}{A numeric vector of length one with the mass deviation, in ppm, to calculate ranges.
See ?\link{makeTargets} for more information.}

\item{rt}{A numeric vector or data.table/data.frame to make targets.
See ?\link{makeTargets} for more information.}

\item{sec}{A numeric vector of length one with the time deviation, in seconds, to calculate ranges.
See ?\link{makeTargets} for more information.}

\item{colorBy}{A length one character vector applicable to the respective method.}

\item{legendNames}{A character vector with the same length as the number of targets in the respective function.}

\item{interactive}{Logical value, set to \code{TRUE} to use
the \pkg{plotly} instead of \pkg{base}. The default is \code{FALSE}.}

\item{targets}{A character vector with target names.}

\item{plotTargetMark}{Logical, set to \code{TRUE} to plot a target mark.}

\item{targetsMark}{A two columns \link[data.table]{data.table} or \link{data.frame} with
\emph{m/z} and time targets. The column must be named with "mz" and "rt" for
\emph{m/z} and time values, respectively.}

\item{ppmMark}{A numeric vector of length one to define the mass deviation, in ppm,
of the target mark.}

\item{secMark}{A numeric vector of length one to define the time deviation, in seconds,
of the target mark.}

\item{numberRows}{A numeric vector of length one to define
the number of rows to grid the plots.}

\item{algorithm}{A character vector with the name of the algorithm to be applied.}

\item{settings}{A list with parameter settings.}

\item{replicates}{A numeric or character vector with the indice/s or name/s
of replicates from the \code{object}.}

\item{xlim}{A length one or two numeric vector for setting the \emph{x} limits of a plot.}

\item{ylim}{A length one or two numeric vector for setting the \emph{y} limits of a plot.}

\item{all}{Logical, set to \code{TRUE} for displaying all features/peaks.}

\item{obj}{An \linkS4class{ntsData} object.}

\item{path}{A character vector with a folder location.}

\item{filename}{A character string with a file name.}

\item{filepath}{A character string with the complete file path.}
}
\description{
A S4 class object to store project processed data within the \pkg{ntsIUTA} package.
The data within the slots is stored mostly as \link[data.table]{data.table} objects for a more
flexible and comprehensive processing and assembly of workflows. Only the slot workflows is a 
list composed of \link[data.table]{data.table} objects for each executed workflow step.
}
\section{Methods (by generic)}{
\itemize{
\item \code{projectInfo}: setter for project basic information.
When the \code{title}, \code{description} and \code{date} arguments
are missing it returns a list with the project basic information.
If arguments are given, the project basic information is updated
based on the specified arguments, returning the \linkS4class{ntsData} object.

\item \code{path}: Getter for project path.

\item \code{samplesTable}: Getter for samples data table.

\item \code{filePaths}: Getter for file paths.

\item \code{samples}: Getter for sample names.

\item \code{replicates}: Getter for sample replicate names.

\item \code{replicates<-}: Setter for sample replicate names.
The \code{value} is a character vector with the same length as the number of samples
in the \code{object}, containing sample replicate names for each sample.

\item \code{blanks}: Getter for blank replicate names.

\item \code{blanks<-}: Setter for blank replicate groups.
The \code{value} is a character vector with the same length as the number of samples
in the \code{object}, containing blank replicate name to associate to each sample.

\item \code{acquisitionMethods}: Getter for acquisition method names.

\item \code{acquisitionMethods<-}: Setter for acquisition method names.
The \code{value} is a character vector with the same length as the number of samples
in the \code{object}, containing the name of the aquisition method used for each sample.
When the length is one, the name is applied to all samples.

\item \code{polarity}: Getter for the polarity of the \linkS4class{ntsData} object.

\item \code{polarity<-}: Setter for the polarity mode of the samples (i.e., files).
The \code{value} is a character vector with length one with either \emph{positive} or \emph{negative} strings.

\item \code{metadata}: Getter for metadata as \link[data.table]{data.table}.
The \code{varname} argument is a character string to specify
which metadata variable/s to extract.

\item \code{controlSamples}: Getter for the control samples \link[data.table]{data.table}.

\item \code{controlSamples<-}: Setter for control samples or sample replicates.
The \code{value} is a character vector with the names of the samples or sample replicate name/s
to be used for quality control as predefined by the \code{nameType} argument when using
"samples" or "replicates", respectively. 
If the \code{remove} argument is \code{TRUE}
the specified sample or replicate names are moved from
the \code{controlSamples} slot to the samples of the \linkS4class{ntsData} object.

\item \code{[}: Subset on samples, using sample index or name.
Note that filtering of features is lazy to make it fast.
Only average \emph{m/z}, retention time and intensity are updated.
Run updateFeatureTable() with \code{FAST} set to \code{FALSE} for a complete update of
features. Note that the update might invalitate present quality parameters and annotation.

\item \code{hasAdjustedRetentionTime}: checks if the \linkS4class{ntsData} has adjusted
retention time derived from alighment of peaks across samples.

\item \code{EICs}: get extracted ion chromatograms (EICs)
for specified \emph{m/z} and retention time (seconds) targets
in given samples. The arguments \code{mz}, \code{ppm}, \code{rt}
and \code{sec} are used to construct the targets.
See ?\link{makeTargets} for more information.

\item \code{plotEICs}: A method for plotting extracted ion chromatograms (EICs)
of data in an \linkS4class{ntsData} object.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or EICs targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets".

\item \code{plotEICs}: A method for plotting extracted ion chromatograms (EICs)
of data in a \link[data.table]{data.table} object obtained with the \link{EICs} method.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or EICs targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets". A subset of the targets in the object
can be plotted using the \code{targets} argument.

\item \code{TICs}: Extract total ion chromatograms (TICs)
for samples in an \linkS4class{ntsData} object.

\item \code{plotTICs}: Plots a total ion chromatogram (TIC)
from each sample in an \linkS4class{ntsData} object.
\code{colorBy} can be \code{"samples"} (the default)
or \code{replicates} for colouring by samples or replicates, respectively.

\item \code{plotTICs}: Plots a total ion chromatogram (TIC)
from each sample in a \link[data.table]{data.table} object as produced
by the \link{TICs} method. The columns should include the following entries 
"sample", "replicate, "id", "rt" and "intensity".

\item \code{XICs}: get three dimentional (\emph{m/z}, time and intensity)
extracted ion chromatograms (XICs) for specified \emph{m/z} and retention time pair targets
in samples of an \linkS4class{ntsData} object. The arguments \code{mz}, \code{ppm}, \code{rt}
and \code{sec} are used to construct the targets.
See ?\link{makeTargets} for more information.

\item \code{plotXICs}: plots three dimentional (\emph{m/z}, time and intensity)
extracted ion chromatograms (XICs) for specified \emph{m/z} and retention time pair targets
in samples of an \linkS4class{ntsData} object. The arguments \code{mz}, \code{ppm}, \code{rt}
and \code{sec} are used to construct the targets. See ?\link{makeTargets} for more information.
When \code{plotTargetMark} is \code{TRUE} a target is plotted representing the deviations as defined
by the arguments \code{ppmMark} and \code{secMark} in ppm and seconds, respectively.
When ranges were given to build the XIC, exact \emph{m/z} and time targets can be specified with
the argument \code{targetsMark}. \code{targetsMark} should be a two column table named mz and rt with
exact \emph{m/z} and time targets. Note that the number of rows should be the same as the number of target
in the XIC. The number of rows to plot multiple targets can be defined by the \code{numberRows} argument.

\item \code{plotXICs}: plots three dimentional (\emph{m/z}, time and intensity)
extracted ion chromatograms (XICs) for specified \emph{m/z} and retention time pair targets
in samples of a \link[data.table]{data.table} object as produced
by the \link{XICs} method. \code{samples} and \code{targets} can be used to filter the XIC table.
When \code{plotTargetMark} is \code{TRUE} a target is plotted representing the deviations as defined
by the arguments \code{ppmMark} and \code{secMark} in ppm and seconds, respectively.
When ranges were given to build the XIC, exact \emph{m/z} and time targets can be specified with
the argument \code{targetsMark}. \code{targetsMark} should be a two column table named mz and rt with
exact \emph{m/z} and time targets. Note that the number of rows should be the same as the number of target
in the XIC. The number of rows to plot multiple targets can be defined by the \code{numberRows} argument.

\item \code{MS2s}: get MS2 data for specified \emph{m/z} and retention time (seconds) targets
in samples of an \linkS4class{ntsData} object. The \code{clusteringUnit} defines the method used for clustering.
Possible values are \emph{euclidean} (the default) or \emph{distance}.
The mass (in Da) and time (in seconds) isolation windows to screen for the respective precursors
are defined with the arguments \code{isolationMassWindow} and \code{isolationTimeWindow}, respectively.
The \code{clusteringUnit} and \code{clusteringWindow} define
the mass deviation unit and deviation to cluster mass traces from different spectra, respectively.
For the \code{clusteringUnit}, possible values are \emph{mz} (the default) or \emph{ppm}.
The \code{minIntensityPre} and \code{minIntensityPost}
define the minimum intensity for mass traces before and after clustering, respectively.
Set \code{mergeVoltages} to \code{TRUE} for merging spectra acquired with different collision energies.
The \code{mergeBy} argument is used to merge spectra by "samples" or "replicates".
When \code{NULL}, MS2 is given per target and per sample.

\item \code{plotMS2s}: plots MS2 data for specified \emph{m/z} and retention time (seconds) targets
in samples of an \linkS4class{ntsData} object. The \code{clusteringUnit} defines the method used for clustering.
Possible values are \emph{euclidean} (the default) or \emph{distance}.
The mass (in Da) and time (in seconds) isolation windows to screen for the respective precursors
are defined with the arguments \code{isolationMassWindow} and \code{isolationTimeWindow}, respectively.
The \code{clusteringUnit} and \code{clusteringWindow} define
the mass deviation unit and deviation to cluster mass traces from different spectra, respectively.
For the \code{clusteringUnit}, possible values are \emph{mz} (the default) or \emph{ppm}.
The \code{minIntensityPre} and \code{minIntensityPost}
define the minimum intensity for mass traces before and after clustering, respectively.
Set \code{mergeVoltages} to \code{TRUE} for merging spectra acquired with different collision energies.
The \code{mergeBy} argument is used to merge spectra by "samples" or "replicates".
When \code{NULL}, MS2 is given per target and per sample. The possible values for the
\code{colorBy} argument are "targets", "samples", "replicates" and "voltages" to colour by
each target, sample, replicate or collision energy, respectively.

\item \code{plotMS2s}: plots MS2 data for specified \emph{m/z} and retention time (seconds) targets
in a \link[data.table]{data.table} as obtained by the \link{MS2s}. The targets in the
object can be filtered using the \code{targets} argument. Also, "samples" and "replicates"
can be filtered using the \code{samples} and \code{replicates} arguments, respectively.
Note that the column sample/replicate should be present.
The possible values for the \code{colorBy} argument are
"targets", "samples", "replicates" and "voltages" to color by
each target, sample, replicate or collision energy, respectively.

\item \code{peaks}: Getter for chromatographic peaks.
The arguments \code{targets} and \code{mz}/\code{rt} can be used
to select specific peaks. The \emph{id} of peaks and/or features can be given in the \code{targets}
argument to select the respective peaks. Also, samples can be selected using the
\code{samples} argument.

\item \code{plotPeaks}: A method for plotting chromatographic peaks
in an \linkS4class{ntsData} object.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or peak targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{mapPeaks}: A method for mapping peaks mass and time space
in an \linkS4class{ntsData} object.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or peak targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{[}: Subset on samples and features, using index or name.
Note that this method is irreversible.

\item \code{features}: Getter for features (i.e., grouped peaks).

\item \code{plotFeatures}: A method for plotting peaks from given features
in an \linkS4class{ntsData} object.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or peak targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{components}: Getter for components (i.e., isotopes and adducts clustered by neutral mass).
When giving the argument \code{all} as \code{TRUE},
all the features within the target feature components are included in the output.

\item \code{plotComponents}: A method for plotting peaks from given features
in an \linkS4class{ntsData} object.
The \code{colorBy} argument can be be \code{"samples"}, \code{replicates} or \code{targets}
(the default), for colouring by samples, replicates or peak targets, respectively.
The \code{legendNames} is a character vector with the same length as targets for plotting and
can be used to lengend the plot. Note that, by setting \code{legendNames} the \code{colorBy}
is set to "targets" automatically.

\item \code{filter}: Method to filter features in an \linkS4class{ntsData} object.
Filters can be given with extra arguments (i.e., \code{...}).
The available filters are as folllows:
\itemize{
 \item \code{minIntensity}: features below a minimum intensity threshold.
For example, minIntensity = 3000, removes features below 3000 counts;
 \item \code{blankThreshold}: features that are not more intense than a defined
threshold multiplier of the assigned blank intensity.
For example, blankThreshold = 3, features that are not higher than 3 times the blank intensity;
 \item \code{maxReplicateIntensityDeviation} features based on a
maximum standard deviation (SD), in percentage, among replicate samples.
For example, maxReplicateIntensityDeviation = 30, filters features that do not have
the SD below 30% in at least one sample replicate group.
 \item \code{minReplicateAbundance}: features that are not present with at least
a specified frequency in one sample replicate group.
For example, minReplicateAbundance = 2, filters featues that are not represented
in at least two samples within a replicate.
 \item \code{snRatio} features below a minimum signal-to-noise (s/n) ratio threshold.
For example, snRatio = 3, filters features below a s/n ratio of 3.
}

\item \code{pickingParameters}: Getter for peak picking parameter settings.

\item \code{pickingParameters}: Setter for peak picking parameter settings.

\item \code{groupingParameters}: Getter for peak grouping parameters.

\item \code{groupingParameters}: Setter for peak grouping parameters.

\item \code{fillingParameters}: Getter for fill missing parameters.

\item \code{fillingParameters}: Setter for fill missing parameters.

\item \code{fragmentsParameters}: Getter for fragments extraction parameters.

\item \code{fragmentsParameters}: Setter for fragments extraction parameters.

\item \code{annotationParameters}: Getter for annotation parameters.

\item \code{annotationParameters}: Setter for annotation parameters.

\item \code{saveParameters}: Method to save the \linkS4class{ntsParameters} in the project path
or other defined by the argument \code{path}.
A name for the \emph{rds} file can be specified by the argument \code{filename}, without format.

\item \code{loadParameters}: Method to load an existing \linkS4class{ntsParameters} from disk.
The complete location of the file should be given by the argument \code{filepath}.
The default is the \link{choose.files} function.
}}

\section{Slots}{

\describe{
\item{\code{project}}{A table with five columns:
\enumerate{
 \item title: a character string with the project title;
 \item date: the date of the project;
 \item path: a character string with the project path;
 \item polarity: character string with associated blank replicate;
 \item description: a character string with the project description.
}}

\item{\code{samples}}{A table with six columns:
\enumerate{
 \item file: character string with the file path;
 \item sample: character string with the file name;
 \item replicate: character string with the assigned sample replicate group;
 \item blank: character string with associated blank replicate;
 \item datatype: character string with type of data (i.e., centroided, profile or chromatograms);
 \item size: a numeric value with the total number of scans/chromatograms;
 \item msLevels: a character string with the existing MS levels;
 \item timeStamp: a character string with the start time stamp of thesample/file;
 \item method: a character string with the method name or path used to acquire the data.
}}

\item{\code{scans}}{A table with the MS information for each scan in each file/sample.}

\item{\code{ms1}}{A table with columns () with MS1 data for each file/sample.}

\item{\code{ms2}}{A table with MS2 data for each file/sample.}

\item{\code{chromsInfo}}{A table with chromatographic info for each file/sample.}

\item{\code{chroms}}{A table with chromatograms in each file/sample.}

\item{\code{metadata}}{A table with the same number of rows
as the number of \code{samples} containing metadata for each sample added as extra columns.}

\item{\code{parameters}}{A \linkS4class{ntsParameters} object containing process parameters for the basic workflow.
See \code{?"ntsParameters-class"} for more information.}

\item{\code{controlSamples}}{A \linkS4class{qcData} object used for quality control. More information in \code{?"qcData-class"}.}

\item{\code{controlResults}}{A \linkS4class{qcData} object used for quality control. More information in \code{?"qcData-class"}.}

\item{\code{pat}}{An \linkS4class{workflowStep} object from the \pkg{patRoon} package.}

\item{\code{peaks}}{A table with peaks for each sample.}

\item{\code{features}}{A table with features (i.e., grouped peaks across samples in the project).}

\item{\code{unified}}{A table with unified features
(i.e., features collapsed by their isotopes and adducts
as well as respective features acquired with a different ionization).}

\item{\code{filters}}{A list of applied filters to the features.}

\item{\code{removed}}{A table with the removed unified features.}

\item{\code{workflows}}{A list of objects inherent of downstream data processing steps, such as
suspect screening, track of transformations and others.}
}}

\note{
The slot \code{pat} contains the native \linkS4class{features} or
\linkS4class{featureGroups} object which can be used
within native functions of the \pkg{patRoon} package.
}
\references{
\insertRef{Helmus2021}{ntsIUTA}
}
